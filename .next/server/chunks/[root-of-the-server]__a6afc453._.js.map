{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Documents/GitHub/legal_analysis-nextjs/frontend/pages/api/auth/register.ts"],"sourcesContent":["import type { NextApiRequest, NextApiResponse } from 'next';\r\nimport { put, list } from '@vercel/blob';\r\nimport bcrypt from 'bcryptjs';\r\nimport { RegisterRequest, AuthResponse, User, Office } from '../../../types/auth';\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  if (req.method !== 'POST') {\r\n    return res.status(405).json({ success: false, error: 'Method not allowed' });\r\n  }\r\n\r\n  try {\r\n    const { username, email, password, confirmPassword, officeName }: RegisterRequest = req.body;\r\n\r\n    // Auto-detect Vercel Blob token (with or without prefix)\r\n    let BLOB_TOKEN = process.env.BLOB_READ_WRITE_TOKEN;\r\n    if (!BLOB_TOKEN) {\r\n      // Try to find prefixed token (e.g., VERCEL_BLOB_RW_*_READ_WRITE_TOKEN)\r\n      const envKeys = Object.keys(process.env);\r\n      const blobTokenKey = envKeys.find(key => key.includes('BLOB') && key.includes('READ_WRITE_TOKEN'));\r\n      if (blobTokenKey) {\r\n        BLOB_TOKEN = process.env[blobTokenKey];\r\n      }\r\n    }\r\n    \r\n    if (!BLOB_TOKEN) {\r\n      return res.status(500).json({\r\n        success: false,\r\n        error: 'إعداد التخزين مفقود: يرجى ضبط المتغير BLOB_READ_WRITE_TOKEN في البيئة (ملف .env.local) ثم إعادة تشغيل الخادم.'\r\n      });\r\n    }\r\n\r\n    // Normalize inputs\r\n    const normalizedUsername = (username || '').trim();\r\n    const normalizedEmail = (email || '').trim().toLowerCase();\r\n    const normalizedOfficeName = (officeName || '').trim();\r\n\r\n    // التحقق من المدخلات\r\n    if (!normalizedUsername || !normalizedEmail || !password || !confirmPassword || !normalizedOfficeName) {\r\n      return res.status(400).json({ \r\n        success: false, \r\n        error: 'جميع الحقول مطلوبة' \r\n      });\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      return res.status(400).json({ \r\n        success: false, \r\n        error: 'كلمتا المرور غير متطابقتين' \r\n      });\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      return res.status(400).json({ \r\n        success: false, \r\n        error: 'كلمة المرور يجب أن تكون 6 أحرف على الأقل' \r\n      });\r\n    }\r\n\r\n    // التحقق من صحة البريد الإلكتروني\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(normalizedEmail)) {\r\n      return res.status(400).json({ \r\n        success: false, \r\n        error: 'البريد الإلكتروني غير صحيح' \r\n      });\r\n    }\r\n\r\n    try {\r\n      // قراءة المستخدمين الموجودين\r\n      const { blobs } = await list({ token: BLOB_TOKEN });\r\n      const usersBlobName = 'users.json';\r\n      const officesBlobName = 'offices.json';\r\n      \r\n      let users: User[] = [];\r\n      let offices: Office[] = [];\r\n      \r\n      // قراءة المستخدمين\r\n      const usersFile = blobs.find(blob => blob.pathname === usersBlobName);\r\n      if (usersFile) {\r\n        const response = await fetch(usersFile.url);\r\n        users = await response.json();\r\n      }\r\n\r\n      // قراءة المكاتب\r\n      const officesFile = blobs.find(blob => blob.pathname === officesBlobName);\r\n      if (officesFile) {\r\n        const response = await fetch(officesFile.url);\r\n        offices = await response.json();\r\n      }\r\n\r\n      // التحقق من عدم تكرار اسم المستخدم (بدون مسافات وبلا تمييز حالة الأحرف)\r\n      if (users.some(u => (u.username || '').trim().toLowerCase() === normalizedUsername.toLowerCase())) {\r\n        return res.status(400).json({ \r\n          success: false, \r\n          error: 'اسم المستخدم مستخدم بالفعل' \r\n        });\r\n      }\r\n\r\n      // التحقق من عدم تكرار البريد الإلكتروني (بدون مسافات وبلا تمييز حالة الأحرف)\r\n      if (users.some(u => (u.email || '').trim().toLowerCase() === normalizedEmail)) {\r\n        return res.status(400).json({ \r\n          success: false, \r\n          error: 'البريد الإلكتروني مستخدم بالفعل' \r\n        });\r\n      }\r\n\r\n      // التحقق من عدم تكرار اسم المكتب (بدون مسافات وبلا تمييز حالة الأحرف)\r\n      if (offices.some(o => (o.name || '').trim().toLowerCase() === normalizedOfficeName.toLowerCase())) {\r\n        return res.status(400).json({ \r\n          success: false, \r\n          error: 'اسم المكتب مستخدم بالفعل' \r\n        });\r\n      }\r\n\r\n      // تشفير كلمة المرور\r\n      const saltRounds = 12;\r\n      const hashedPassword = await bcrypt.hash(password, saltRounds);\r\n\r\n      // إنشاء معرفات فريدة\r\n      const userId = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n      const officeId = `office_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n      // إنشاء المكتب\r\n      const newOffice: Office = {\r\n        id: officeId,\r\n        name: normalizedOfficeName,\r\n        ownerId: userId,\r\n        createdAt: new Date(),\r\n        employeeCount: 1\r\n      };\r\n\r\n      // إنشاء المستخدم\r\n      const newUser: User = {\r\n        id: userId,\r\n        username: normalizedUsername,\r\n        email: normalizedEmail,\r\n        password: hashedPassword,\r\n        role: 'admin',\r\n        officeId,\r\n        createdAt: new Date(),\r\n        isActive: true\r\n      };\r\n\r\n      // إضافة المستخدم والمكتب للقوائم\r\n      users.push(newUser);\r\n      offices.push(newOffice);\r\n\r\n      // حفظ المستخدمين\r\n      await put(usersBlobName, JSON.stringify(users, null, 2), {\r\n        access: 'public',\r\n        addRandomSuffix: false,\r\n        token: BLOB_TOKEN\r\n      });\r\n\r\n      // حفظ المكاتب\r\n      await put(officesBlobName, JSON.stringify(offices, null, 2), {\r\n        access: 'public',\r\n        addRandomSuffix: false,\r\n        token: BLOB_TOKEN\r\n      });\r\n\r\n      // إرسال الاستجابة\r\n      const response: AuthResponse = {\r\n        success: true,\r\n        message: 'تم إنشاء الحساب بنجاح'\r\n      };\r\n\r\n      return res.status(201).json(response);\r\n\r\n    } catch (blobError) {\r\n      console.error('Blob error:', blobError);\r\n      return res.status(500).json({ \r\n        success: false, \r\n        error: 'خطأ في قاعدة البيانات' \r\n      });\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Registration error:', error);\r\n    return res.status(500).json({ \r\n      success: false, \r\n      error: 'خطأ داخلي في الخادم' \r\n    });\r\n  }\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Documents/GitHub/legal_analysis-nextjs/frontend/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Documents/GitHub/legal_analysis-nextjs/frontend/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Documents/GitHub/legal_analysis-nextjs/frontend/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP/Documents/GitHub/legal_analysis-nextjs/frontend/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,2HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,2HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}