import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import { embeddedAuth } from '../utils/auth.embedded';

export default function LoginPage() {
  const router = useRouter();
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');
  const [showPassword, setShowPassword] = useState(false);

  useEffect(() => {
    const checkCurrentUser = async () => {
      try {
        const currentUser = await embeddedAuth.getCurrentUser();
        if (currentUser) {
          router.push('/');
        }
      } catch {
        console.log('No current user');
      }
    };

    checkCurrentUser();

    // ุนุฑุถ ุฑุณุงูุฉ ุงููุฌุงุญ ุฅุฐุง ูุงูุช ููุฌูุฏุฉ ูู URL
    if (router.query.message) {
      setSuccess(router.query.message as string);
      // ูุณุญ ุงูุฑุณุงูุฉ ูู URL
      router.replace('/login', undefined, { shallow: true });
    }
  }, [router]);

  const handleInputChange = (field: 'email' | 'password', value: string) => {
    if (field === 'email') {
      setEmail(value);
    } else {
      setPassword(value);
    }
    // ูุณุญ ุงูุฑุณุงุฆู ุนูุฏ ุงููุชุงุจุฉ
    if (error) setError('');
    if (success) setSuccess('');
  };

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);
    setError('');
    setSuccess('');

    try {
      if (!email || !password) {
        setError('ูุฑุฌู ููุก ุฌููุน ุงูุญููู');
        return;
      }

      if (!email.includes('@') || !email.includes('.')) {
        setError('ูุฑุฌู ุฅุฏุฎุงู ุจุฑูุฏ ุฅููุชุฑููู ุตุญูุญ');
        return;
      }

      if (password.length < 6) {
        setError('ูููุฉ ุงููุฑูุฑ ูุฌุจ ุฃู ุชููู 6 ุฃุญุฑู ุนูู ุงูุฃูู');
        return;
      }

      await embeddedAuth.loginUser(email, password);
      setSuccess('ุชู ุชุณุฌูู ุงูุฏุฎูู ุจูุฌุงุญ! ๐');
      
      // ุงูุงูุชูุงู ููุตูุญุฉ ุงูุฑุฆูุณูุฉ ุจุนุฏ ุซุงููุฉ
      setTimeout(() => {
        router.push('/');
      }, 1000);
      
    } catch (error: unknown) {
      // ุฑุณุงุฆู ุฎุทุฃ ููุตูุฉ
      const errorMessage = error instanceof Error ? error.message : 'ุญุฏุซ ุฎุทุฃ ูู ุชุณุฌูู ุงูุฏุฎูู';
      
      if (errorMessage.includes('ุจูุงูุงุช ุงูุฏุฎูู ุบูุฑ ุตุญูุญุฉ')) {
        setError('ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุฃู ูููุฉ ุงููุฑูุฑ ุบูุฑ ุตุญูุญุฉ. ูุฑุฌู ุงูุชุญูู ูู ุงูุจูุงูุงุช ูุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู');
      } else if (errorMessage.includes('ุงููุณุชุฎุฏู ุบูุฑ ููุฌูุฏ')) {
        setError('ูุฐุง ุงูุญุณุงุจ ุบูุฑ ูุณุฌู. ูุฑุฌู ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ ุฃู ุงูุชุญูู ูู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู');
      } else if (errorMessage.includes('ูููุฉ ุงููุฑูุฑ')) {
        setError('ูููุฉ ุงููุฑูุฑ ุบูุฑ ุตุญูุญุฉ');
      } else if (errorMessage.includes('ุงูุจุฑูุฏ ุงูุฅููุชุฑููู')) {
        setError('ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุบูุฑ ุตุญูุญ');
      } else {
        setError(errorMessage || 'ุญุฏุซ ุฎุทุฃ ูู ุชุณุฌูู ุงูุฏุฎููุ ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู');
      }
    } finally {
      setIsLoading(false);
    }
  };

  const handleGoToSignup = () => {
    router.push('/signup');
  };

  return (
    <>
      <Head>
        <title>ุชุณุฌูู ุงูุฏุฎูู - ููุตุฉ ุงูุชุญููู ุงููุงูููู</title>
        <meta name="description" content="ุชุณุฌูู ุงูุฏุฎูู ุฅูู ููุตุฉ ุงูุชุญููู ุงููุงูููู ุงูุฐููุฉ" />
      </Head>

      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-blue-900 to-gray-900 flex items-center justify-center p-4">
        <div className="w-full max-w-4xl grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* ุงููุณู ุงูุฃูุณุฑ - ูุนูููุงุช ุงููููุน */}
          <div className="hidden lg:flex flex-col justify-center">
            <div className="bg-white/10 backdrop-blur-lg rounded-xl shadow-2xl p-8 border border-gray-700">
              <div className="text-center mb-8">
                <div className="mx-auto w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mb-4">
                  <span className="text-3xl">โ๏ธ</span>
                </div>
                <h1 className="text-3xl font-bold text-white mb-2">ููุตุฉ ุงูุชุญููู ุงููุงูููู ุงูุฐููุฉ</h1>
                <p className="text-gray-300 text-lg">ุฃูู ููุตุฉ ุนุฑุจูุฉ ูุชุฎุตุตุฉ ูู ุงูุชุญููู ุงููุงูููู ุงููุฏุนูู ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู</p>
              </div>

              <div className="space-y-6">
                <div className="bg-gradient-to-r from-blue-500/20 to-purple-500/20 rounded-lg p-6 border border-blue-500/30">
                  <h3 className="text-xl font-bold text-white mb-4 flex items-center">
                    <span className="mr-2">๐</span>
                    ูููุฒุงุช ุงูููุตุฉ
                  </h3>
                  <ul className="space-y-3 text-gray-300">
                    <li className="flex items-center">
                      <span className="text-green-400 mr-2">โ</span>
                      ุชุญููู ูุงูููู ูุชูุฏู ุจู 16 ูุฑุญูุฉ
                    </li>
                    <li className="flex items-center">
                      <span className="text-green-400 mr-2">โ</span>
                      ุฏุนู ูุงูู ููุบุฉ ุงูุนุฑุจูุฉ
                    </li>
                    <li className="flex items-center">
                      <span className="text-green-400 mr-2">โ</span>
                      ูุฏูู ูุฑุฌุนู ุฐูู ููุงุณุชุดูุงุฏุงุช
                    </li>
                    <li className="flex items-center">
                      <span className="text-green-400 mr-2">โ</span>
                      ุชุตุฏูุฑ PDF ู Word ุงุญุชุฑุงูู
                    </li>
                    <li className="flex items-center">
                      <span className="text-green-400 mr-2">โ</span>
                      ุญูุธ ูุฅุฏุงุฑุฉ ุงููุถุงูุง
                    </li>
                  </ul>
                </div>

                <div className="bg-gradient-to-r from-green-500/20 to-blue-500/20 rounded-lg p-6 border border-green-500/30">
                  <h3 className="text-xl font-bold text-white mb-4 flex items-center">
                    <span className="mr-2">๐ก</span>
                    ููู ุชุนูู ุงูููุตุฉุ
                  </h3>
                  <div className="text-gray-300 space-y-2">
                    <p>1. ุฃุฏุฎู ุชูุงุตูู ูุถูุชู ุงููุงููููุฉ</p>
                    <p>2. ุงุฎุชุฑ ููุน ุงููุถูุฉ ูุตูุฉ ุงูุฎุตู</p>
                    <p>3. ุงุชุจุน ุงููุฑุงุญู ุงูู 16 ููุชุญููู</p>
                    <p>4. ุงุญุตู ุนูู ุนุฑูุถุฉ ูุงููููุฉ ุฌุงูุฒุฉ</p>
                  </div>
                </div>

                <div className="bg-gradient-to-r from-purple-500/20 to-pink-500/20 rounded-lg p-6 border border-purple-500/30">
                  <h3 className="text-xl font-bold text-white mb-4 flex items-center">
                    <span className="mr-2">๐ฏ</span>
                    ุฃููุงุน ุงููุถุงูุง ุงููุฏุนููุฉ
                  </h3>
                  <div className="grid grid-cols-2 gap-2 text-sm text-gray-300">
                    <span>โข ูุฏูู ุนุงู</span>
                    <span>โข ุฃุญูุงู ุดุฎุตูุฉ</span>
                    <span>โข ุชุฌุงุฑู</span>
                    <span>โข ุฌูุงุฆู</span>
                    <span>โข ุนูู</span>
                    <span>โข ุนูุงุฑู</span>
                    <span>โข ุฅุฏุงุฑู</span>
                    <span>โข ููุฑุงุซ</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* ุงููุณู ุงูุฃููู - ูููุฐุฌ ุชุณุฌูู ุงูุฏุฎูู */}
          <div className="flex items-center justify-center">
            <div className="w-full max-w-md bg-white/10 backdrop-blur-lg rounded-xl shadow-2xl p-8 border border-gray-700">
              {/* ุดุนุงุฑ ุงูููุตุฉ */}
              <div className="text-center mb-8">
                <div className="mx-auto w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center mb-4">
                  <span className="text-2xl">โ๏ธ</span>
                </div>
                <h2 className="text-2xl font-bold text-white mb-2">ูุฑุญุจุงู ุจู ูุฌุฏุฏุงู</h2>
                <p className="text-gray-300">ุณุฌู ุฏุฎููู ูููุตูู ุฅูู ููุตุฉ ุงูุชุญููู ุงููุงูููู</p>
              </div>

              {/* ูููุฐุฌ ุชุณุฌูู ุงูุฏุฎูู */}
              <form onSubmit={handleLogin} className="space-y-6">
                {/* ุงูุจุฑูุฏ ุงูุฅููุชุฑููู */}
                <div>
                  <label htmlFor="email" className="block text-sm font-medium text-gray-300 mb-2">
                    ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
                  </label>
                  <div className="relative">
                    <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <span className="text-gray-400 text-sm">โ๏ธ</span>
                    </div>
                    <input
                      id="email"
                      type="email"
                      value={email}
                      onChange={(e) => handleInputChange('email', e.target.value)}
                      className="w-full pl-10 pr-4 py-3 text-sm bg-gray-800/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                      placeholder="ุฃุฏุฎู ุจุฑูุฏู ุงูุฅููุชุฑููู"
                      dir="ltr"
                      required
                    />
                  </div>
                </div>

                {/* ูููุฉ ุงููุฑูุฑ */}
                <div>
                  <label htmlFor="password" className="block text-sm font-medium text-gray-300 mb-2">
                    ูููุฉ ุงููุฑูุฑ
                  </label>
                  <div className="relative">
                    <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                      <span className="text-gray-400 text-sm">๐</span>
                    </div>
                    <input
                      id="password"
                      type={showPassword ? 'text' : 'password'}
                      value={password}
                      onChange={(e) => handleInputChange('password', e.target.value)}
                      className="w-full pr-10 pl-4 py-3 text-sm bg-gray-800/50 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200"
                      placeholder="ุฃุฏุฎู ูููุฉ ุงููุฑูุฑ"
                      dir="ltr"
                      required
                    />
                    <button
                      type="button"
                      className="absolute inset-y-0 left-0 pl-3 flex items-center"
                      onClick={() => setShowPassword(!showPassword)}
                    >
                      <span className="text-gray-400 text-sm">
                        {showPassword ? '๐๏ธ' : '๐๏ธโ๐จ๏ธ'}
                      </span>
                    </button>
                  </div>
                </div>

                {/* ุฑุณุงูุฉ ุงููุฌุงุญ */}
                {success && (
                  <div className="bg-green-900/50 border border-green-500 text-green-200 px-4 py-3 rounded-lg text-sm flex items-center">
                    <span className="mr-2">โ</span>
                    {success}
                  </div>
                )}

                {/* ุฑุณุงูุฉ ุงูุฎุทุฃ */}
                {error && (
                  <div className="bg-red-900/50 border border-red-500 text-red-200 px-4 py-3 rounded-lg text-sm flex items-center">
                    <span className="mr-2">โ</span>
                    {error}
                  </div>
                )}

                {/* ุฒุฑ ุชุณุฌูู ุงูุฏุฎูู */}
                <button
                  type="submit"
                  disabled={isLoading}
                  className="w-full py-3 px-4 bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-medium rounded-lg shadow-lg hover:from-blue-600 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 transition-all duration-300 flex items-center justify-center text-sm disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  {isLoading ? (
                    <>
                      <span className="inline-block animate-spin mr-2 text-sm">โณ</span>
                      ุฌุงุฑู ุชุณุฌูู ุงูุฏุฎูู...
                    </>
                  ) : (
                    <>
                      <span className="mr-2">โ</span>
                      ุชุณุฌูู ุงูุฏุฎูู
                    </>
                  )}
                </button>
              </form>

              {/* ุฑูุงุจุท ุฅุถุงููุฉ */}
              <div className="mt-6 text-center space-y-3">
                <div className="text-sm text-gray-400">
                  ููุณ ูุฏูู ุญุณุงุจุ{' '}
                  <button
                    type="button"
                    onClick={handleGoToSignup}
                    className="text-blue-400 hover:text-blue-300 font-medium border-b border-blue-400 hover:border-blue-300 pb-0.5 transition-colors"
                  >
                    ุฅูุดุงุก ุญุณุงุจ ุฌุฏูุฏ
                  </button>
                </div>
                
                <div className="text-sm text-gray-400">
                  <button
                    type="button"
                    onClick={() => router.push('/')}
                    className="text-gray-300 hover:text-white border-b border-gray-600 hover:border-gray-300 pb-0.5 transition-colors"
                  >
                    ุงูุนูุฏุฉ ููุตูุญุฉ ุงูุฑุฆูุณูุฉ
                  </button>
                </div>
              </div>

              {/* ูุนูููุงุช ุฅุถุงููุฉ */}
              <div className="mt-8 pt-6 border-t border-gray-700">
                <div className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 rounded-lg p-4">
                  <h3 className="text-sm font-medium text-white mb-3 text-center">ูุฒุงูุง ุงูุชุณุฌูู</h3>
                  <ul className="text-xs text-gray-300 space-y-1">
                    <li className="flex items-center">
                      <span className="text-blue-400 mr-1.5">โ</span>
                      ุญูุธ ุงููุถุงูุง ูุงููุฑุงุญู
                    </li>
                    <li className="flex items-center">
                      <span className="text-blue-400 mr-1.5">โ</span>
                      ูุฒุงููุฉ ุงูุจูุงูุงุช ุจูู ุงูุฃุฌูุฒุฉ
                    </li>
                    <li className="flex items-center">
                      <span className="text-blue-400 mr-1.5">โ</span>
                      ุชุญููู ูุงูููู ูุชูุฏู
                    </li>
                    <li className="flex items-center">
                      <span className="text-blue-400 mr-1.5">โ</span>
                      ุฏุนู ูุงูู ููุบุฉ ุงูุนุฑุจูุฉ
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}

